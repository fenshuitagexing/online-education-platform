<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.xdclass.online_xdclass.mapper.VideoMapper">

    <select id="getVideoList" resultType="Video">
        SELECT * FROM video;
    </select>

    <select id="getById" resultType="Video">
        SELECT * FROM video WHERE id = #{video_id};
    </select>

    <select id="getHomePageVideoBanner" resultType="VideoBanner">
        SELECT * FROM video_banner ORDER BY weight ASC;
    </select>
    
    <resultMap id="videoDetailResultMap" type="Video">
    <!-- "property" is mapped to "type" -->
        <id column="id" jdbcType="INTEGER" property="id" />

        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="summary" jdbcType="VARCHAR" property="summary" />
        <result column="cover_img" jdbcType="VARCHAR" property="coverImg" />
        <result column="price" jdbcType="INTEGER" property="price" />
        <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
        <result column="rating" jdbcType="DOUBLE" property="rating" />

        <collection property="chapterList" ofType="Chapter">
        <!-- set an alias in order to avoiding overlapping names in above -->
        <!-- The alias will be applied in the SQL statement -->
            <id column="chapter_id" jdbcType="INTEGER" property="id" />

            <result column="chapter_title" jdbcType="VARCHAR" property="title" />
            <result column="order" jdbcType="INTEGER" property="order" />
            <result column="chapter_creation_time" jdbcType="TIMESTAMP" property="creationTime" />
            
            <collection property="episodeList" ofType="Episode">
                <!-- set an alias in order to avoiding overlapping names in above -->
                <!-- The alias will be applied in the SQL statement -->
                <id column="episode_id" jdbcType="INTEGER" property="id" />

                <result column="title" jdbcType="VARCHAR" property="title" />
                <result column="global_order" jdbcType="INTEGER" property="globalOrder" />
                <result column="chapter_order" jdbcType="INTEGER" property="chapterOrder" />
                <result column="play_url" jdbcType="VARCHAR" property="playUrl" />
                <result column="free" jdbcType="INTEGER" property="free" />
                <result column="episode_creation_time" jdbcType="TIMESTAMP" property="creationTime" />
            </collection>
        </collection>
    </resultMap>

    <select id="getVideoDetailsById" resultMap="videoDetailResultMap">
        SELECT
        v.id, v.title, v.summary, v.cover_img, v.price, v.creation_time, v.rating,
        c.id AS chapter_id, c.title AS chapter_title, c.order, c.creation_time AS chapter_creation_time,
        e.id AS episode_id, e.title AS episode_title, e.global_order, e.chapter_order, e.play_url, e.free, e.creation_time AS episode_creation_time
        FROM video v
        LEFT JOIN chapter c
        ON v.id = c.video_id
        LEFT JOIN episode e
        ON c.id = e.chapter_id
        WHERE v.id = #{video_id}
        ORDER BY c.order, e.global_order
        ASC;
    </select>
</mapper>